/* HeroFinder.css */

h2 {
    font-family: 'Roboto Condensed', sans-serif;
    color: #ff00ea; /* Friendly blue color */
    text-align: center;
    font-size: 3.0rem;
    margin-bottom: 1rem;
    position: relative;
    padding-bottom: 10px;
    text-shadow: 1px 1px 2px #000, /* Horizontal shadow */
                 0 0 25px #fff, /* Soft white glow */
                 0 0 5px #0ff; /* Cyan glow for 3D effect */
}

h2::after {
    content: '';
    display: block;
    width: 60%;
    height: 2px;
    background-color: #ff00c3;
    margin: 0 auto;
    position: absolute;
    left: 20%;
    bottom: 0;
    animation: underlineSlide 2s ease forwards;
}

@keyframes underlineSlide {
    from {
        width: 0;
        left: 50%;
    }
    to {
        width: 60%;
        left: 20%;
    }
}













.hero-finder-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: start; 
    padding: 40px;
    gap: 20px;
}

.hero {
    background-color: #f0f0f0;
    border: 2px solid #007bff;
    padding: 15px;
    margin: 10px;
    border-radius: 10px;
    width: 250px;
    text-align: center;
    position: relative;
    color: black;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hero:hover {
    transform: translateY(-5px);
    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
}

.hero-details {
    display: none;
    text-align: left;
    font-size: 14px;
    padding-top: 10px;
}

.hero-details.show {
    display: block;
}

.hero-name {
    font-weight: bold;
    margin-bottom: 10px;
    color: #333;
    font-size: 20px;
}

.toggle-details-btn {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    align-self: flex-end;
    margin-top: 10px;
}

.toggle-details-btn:hover {
    background-color: #0056b3;
}

/* DuckDuckGo Button Styles */  
.hero .duckduckgo-btn {
    background-color: #de5833; /* DuckDuckGo color */
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    position: absolute;
    bottom: 17px; /* Adjust as needed */
    left: 27%;
    transform: translateX(-50%); /* Center the button */
    transition: background-color 0.3s ease;
}

.hero .duckduckgo-btn:hover {
    background-color: #bf4729; /* Darker shade on hover */
}


/* General Styles */
input, button, select {
    padding: 10px;
    margin: 5px;
    border-radius: 5px;
    border: 1px solid #ddd;
    transition: all 0.3s ease;
}

input:focus, button:focus, select:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 8px rgba(0, 123, 255, 0.6);
}

/* Search Section Styles */
.search-section {
    background-color: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

.search-section input[type="text"], 
.search-section input[type="number"], 
.search-section select {
    width: calc(100% - 22px); /* Adjust width minus padding and border */
    font-size: 16px;
}

.search-section button {
    background-color: #007bff;
    color: blue;
    border: none;
    font-size: 16px;
    cursor: pointer;
}

.search-section button:hover {
    background-color: #0056b3;
}

/* Button Styles */
.button-primary {
    background-color: #28a745;
    color: blue;
    border: none;
    cursor: pointer;
}

.button-primary:hover {
    background-color: #218838;
}

.button-danger {
    background-color: #dc3545;
    color: white;
    border: none;
    cursor: pointer;
}

.button-danger:hover {
    background-color: #c82333;
}

.button-secondary {
    background-color: #6c757d;
    color: white;
    border: none;
    cursor: pointer;
}

.button-secondary:hover {
    background-color: #5a6268;
}


/* Assuming these elements have specific class names in your React component */

.list-name, .creator, .created-at, .last-updated {
    color: #000000; /* This is the color code for black */
}

/* If they are not individually classed, you can target them as children of a specific parent class */

.public-list h3, /* For listName */
.public-list .creator, /* Add this class in your component for the creator */
.public-list .created-at, /* Add this class in your component for createdAt */
.public-list .last-updated /* Add this class in your component for lastUpdated */
{
    color: #000000;
}




.button-blue {
    background-color: #b766ab; /* Blue background */
    color: white; /* White text */
    border: none; /* No border */
    padding: 8px 15px; /* Padding for the button */
    border-radius: 4px; /* Rounded corners */
    cursor: pointer; /* Cursor changes to pointer on hover */
    transition: background-color 0.3s ease; /* Smooth transition for hover effect */
}

.button-blue:hover {
    background-color: #0056b3; /* Slightly darker blue on hover */
}


.section-separator {
    margin-top: 60px; /* Adjust the space as needed */
}

@keyframes fadeIn {
    0% { opacity: 0; transform: translateY(-20px); }
    100% { opacity: 1; transform: translateY(0); }
}

h3 {
    color: #ffffff; /* Cool blue color */
    text-shadow: 1px 1px 4px rgb(0, 0, 0); /* Slight shadow for depth */
    animation: fadeIn 2s ease-out; /* Apply the fadeIn animation */
    text-align: center; /* Center align the text */
    margin-bottom: 20px; /* Spacing below the header */
    font-family: 'Courier New', Courier, monospace;
    font-size: 35px;
}

/* Additional styling for a cool look */
h3::after {
    content: '';
    display: block;
    width: 50px; /* Adjust width as needed */
    height: 2px; /* Adjust thickness as needed */
    background-color: rgb(255, 255, 255);
    margin: 10px auto 0; /* Center the line and space from the text */
    animation: widen 2s ease-out forwards; /* Apply widen animation */
}

@keyframes widen {
    0% { width: 0; }
    100% { width: 50px; }
}

.averagerating {

    color: black;
}
